type Product {
    id: ID!
    title: String!
    quantity: Int!
    description: String!
    price: Float!
    user: User!
    categories: [Category!]!
}

type User {
    id: ID!
    fullname: String!
    email: String!
    password: String!
    phone: String!
    products: [Product!]!
}

type Category {
    id: ID!
    name: String!
    images: String!
    products: [Product!]!
}

input ProductInput {
    title: String!
    quantity: Int!
    description: String!
    price: Float!
    userId: ID!
    categoryIds: [ID!]!
}

input UserInput {
    fullname: String!
    email: String!
    password: String!
    phone: String!
}

input CategoryInput {
    name: String!
    images: String!
}

type Query {
    # Product Queries
    getAllProducts: [Product!]!
    getProductsByPriceAsc: [Product!]!
    getProductsByCategory(categoryId: ID!): [Product!]!
    getProductById(id: ID!): Product

    # User Queries
    getAllUsers: [User!]!
    getUserById(id: ID!): User

    # Category Queries
    getAllCategories: [Category!]!
    getCategoryById(id: ID!): Category
}

type Mutation {
    # Product Mutations
    createProduct(input: ProductInput!): Product!
    updateProduct(id: ID!, input: ProductInput!): Product!
    deleteProduct(id: ID!): Boolean!

    # User Mutations
    createUser(input: UserInput!): User!
    updateUser(id: ID!, input: UserInput!): User!
    deleteUser(id: ID!): Boolean!

    # Category Mutations
    createCategory(input: CategoryInput!): Category!
    updateCategory(id: ID!, input: CategoryInput!): Category!
    deleteCategory(id: ID!): Boolean!
}